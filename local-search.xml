<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker安装MySQL</title>
    <link href="/2025/08/05/docker-install-mysql/"/>
    <url>/2025/08/05/docker-install-mysql/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull mysql:latest<br>docker run -d --name my-mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mypwd mysql<br>docker <span class="hljs-built_in">exec</span> -it my-mysql bash<br>mysql -uroot -pmypwd<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot3教程</title>
    <link href="/2025/08/04/springboot3-tutorial/"/>
    <url>/2025/08/04/springboot3-tutorial/</url>
    
    <content type="html"><![CDATA[<h2 id="开始一个简单的-SpringBoot-程序"><a href="#开始一个简单的-SpringBoot-程序" class="headerlink" title="开始一个简单的 SpringBoot 程序"></a>开始一个简单的 SpringBoot 程序</h2><p>官方文档: <a href="https://docs.spring.io/spring-boot/tutorial/first-application/index.html">Developing Your First Spring Boot Application :: Spring Boot</a></p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.example<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springboot3-01-first<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 继承SpringBoot父工程管理依赖版本 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 引入web开发相关的所有依赖 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><p>主入口程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example;<br><br><span class="hljs-keyword">import</span> org.springframework.boot.SpringApplication;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><br><span class="hljs-comment">// 表明是SpringBoot应用的主入口程序</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyApplication</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(MyApplication.class, args);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.controller;<br><br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-comment">// 注意:想要被Spring容器管理,类必须在SpringBoot主入口程序同级目录或子级目录</span><br><span class="hljs-comment">// @Controller</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloController</span> &#123;<br>    <span class="hljs-meta">@GetMapping(&quot;/hello&quot;)</span><br>    <span class="hljs-comment">// @ResponseBody</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">hello</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Hello World!&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>访问 <code>http://localhost:8080/hello</code></p><blockquote><p>生成可执行 jar 包</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 能创建可执行jar包的springboot插件 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>执行 mvn package 就可以在 target 目录看到生成的 jar 包, 执行 jar 包</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar .\springboot3-01-first-1.0-SNAPSHOT.jar<br></code></pre></td></tr></table></figure><p>如果要指定端口, 在 jar 包的同级目录下新建 <code>application.properties</code> 文件, 加入端口号, 再执行上述命令</p><p><img src="/2025/08/04/springboot3-tutorial/image-20250805104749863.png" alt="image-20250805104749863"></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">server.port</span>=<span class="hljs-string">8081</span><br></code></pre></td></tr></table></figure><blockquote><p>使用脚手架生成项目</p></blockquote><p>Srping 脚手架: <a href="https://start.spring.io/">Spring Initializr</a></p><p>阿里云提供的脚手架: <a href="https://start.aliyun.com/">Cloud Native App Initializer</a></p><p>IDEA 创建项目: </p><p><img src="/2025/08/04/springboot3-tutorial/image-20250805111254134.png" alt="image-20250805111254134"></p><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><h3 id="主入口注解"><a href="#主入口注解" class="headerlink" title="主入口注解"></a>主入口注解</h3><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">relativePath</span>/&gt;</span> <span class="hljs-comment">&lt;!-- 表示 跳过本地路径查找，直接通过仓库（本地仓库 → 远程仓库）定位父项目的 pom.xml --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.example<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springboot3-04-annotation<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>springboot3-04-annotation<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>springboot3-04-annotation<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">java.version</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">java.version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br><span class="hljs-comment">&lt;!-- web启动器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- mybatis启动器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- mysql驱动依赖 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Springboot304AnnotationApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.springboot304annotation;<br><br><span class="hljs-keyword">import</span> org.springframework.boot.SpringApplication;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class="hljs-keyword">import</span> org.springframework.context.ConfigurableApplicationContext;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><br><span class="hljs-keyword">import</span> java.util.Date;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@SpringBootApplication</span> 是一个复合注解</span><br><span class="hljs-comment"> * - <span class="hljs-doctag">@SpringBootConfiguration</span> 包含<span class="hljs-doctag">@Configuration</span>,说明是一个配置类,使用<span class="hljs-doctag">@Bean</span>注解标注的方法,方法的返回值对象会被纳入IOC容器</span><br><span class="hljs-comment"> * - <span class="hljs-doctag">@EnableAutoConfiguration</span> 启用自动配置,会去类路径查找class,满足条件时,由IOC容器管理</span><br><span class="hljs-comment"> * - <span class="hljs-doctag">@ComponentScan</span> 组件扫描,代替的xml配置是&lt;context:component-scan base-packages=&quot;com.example.springboot304annotation&quot;/&gt;,默认扫描所在包及其子包</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot304AnnotationApplication</span> &#123;<br><br><span class="hljs-meta">@Bean</span><br><span class="hljs-keyword">public</span> Date <span class="hljs-title function_">getDate</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">// run方法的第一个参数就是配置类,SpringBoot就是从这个配置类开始,加载所有Bean</span><br><span class="hljs-comment">// run方法返回的是Spring的容器</span><br><span class="hljs-type">ConfigurableApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> SpringApplication.run(Springboot304AnnotationApplication.class, args);<br><br><span class="hljs-comment">// 通过bean的name获取bean</span><br><span class="hljs-type">Object</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;sqlSessionFactory&quot;</span>);<br>System.out.println(sqlSessionFactory);<br><span class="hljs-type">Object</span> <span class="hljs-variable">transactionManager</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;transactionManager&quot;</span>);<br>System.out.println(transactionManager);<br><br><span class="hljs-comment">// 关闭容器</span><br>context.close();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Date;<br><br><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>    <span class="hljs-comment">// 从Spring的IOC容器中查找对象,注入</span><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> Date date;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/hello&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">hello</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> date.toString();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">spring.application.name</span>=<span class="hljs-string">springboot3-04-annotation</span><br><br><span class="hljs-attr">spring.datasource.driver-class-name</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">spring.datasource.url</span>=<span class="hljs-string">jdbc:mysql://localhost:3306/springboot</span><br><span class="hljs-attr">spring.datasource.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">spring.datasource.password</span>=<span class="hljs-string">Init1235</span><br><span class="hljs-attr">spring.datasource.type</span>=<span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br></code></pre></td></tr></table></figure><h3 id="使用-Junit"><a href="#使用-Junit" class="headerlink" title="使用 Junit"></a>使用 Junit</h3><p>Springboot305JunitApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot305JunitApplication</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ConfigurableApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> SpringApplication.run(Springboot305JunitApplication.class, args);<br>        <span class="hljs-type">UserService</span> <span class="hljs-variable">userService</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;userServiceImpl&quot;</span>, UserService.class);<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userService.findUser();<br>        System.out.println(user);<br>        context.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br>    <span class="hljs-keyword">private</span> String userName;<br>    <span class="hljs-keyword">private</span> String password;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserService</span> &#123;<br>    User <span class="hljs-title function_">findUser</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">findUser</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>(<span class="hljs-string">&quot;lisa&quot;</span>,<span class="hljs-string">&quot;123456&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Springboot305JunitApplicationTests.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// springboot中使用junit,会创建一个完整的spring上下文</span><br><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot305JunitApplicationTests</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">contextLoads</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userService.findUser();<br>        System.out.println(user);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">relativePath</span>/&gt;</span> <span class="hljs-comment">&lt;!-- lookup parent from repository --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.example<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springboot3-05-junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>springboot3-05-junit<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>springboot3-05-junit<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">java.version</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">java.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.18.36<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p>jar 包所在目录的 config 文件夹内 &gt;  jar 包所在目录 &gt; classpath 的 config 文件夹内 &gt; classthpath 目录下</p><p>application.properties &gt; application.yml</p><blockquote><p>命令行参数指定配置文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar .\springboot3-06-properties-0.0.1-SNAPSHOT.jar --spring.config.location=file:///C:\Users\liz\<span class="hljs-built_in">test</span>\a\application.properties<br></code></pre></td></tr></table></figure><h3 id="Value-注解"><a href="#Value-注解" class="headerlink" title="@Value 注解"></a>@Value 注解</h3><p>application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">spring.application.name</span>=<span class="hljs-string">springboot3-07-value</span><br><br><span class="hljs-attr">myapp.username</span>=<span class="hljs-string">lisa</span><br><span class="hljs-attr">myapp.email</span>=<span class="hljs-string">1@qq.com</span><br><span class="hljs-comment">#myapp.age=20</span><br></code></pre></td></tr></table></figure><p>SystemService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SystemService</span> &#123;<br>    <span class="hljs-meta">@Value(&quot;$&#123;myapp.username&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String username;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;myapp.email&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String email;<br><br>    <span class="hljs-comment">// 注意:当使用@Value注解时,如果这个key不存在,并且没有指定默认值,则报错</span><br>    <span class="hljs-meta">@Value(&quot;$&#123;myapp.age:50&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> Integer age;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">printInfo</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(username);<br>        System.out.println(email);<br>        System.out.println(age);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Springboot307ValueApplicationTests.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot307ValueApplicationTests</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> SystemService systemService;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">test01</span><span class="hljs-params">()</span> &#123;<br>        systemService.printInfo();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h2><blockquote><p>yaml 语法</p></blockquote><p>用一个空格区分属性名和属性值, 用换行+2个或4个空格表示层级关系</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">myapp:</span> <br><span class="hljs-attr">name:</span> <span class="hljs-string">lisa</span><br><span class="hljs-attr">age:</span> <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>大小写敏感</p><p>用 <code>#</code> 注释</p><p>普通文本可以用单引号或双引号括起来, 也可以不用</p><ul><li>单引号不转义, <code>\n</code> 被当做普通的字符串</li><li>双引号会将 <code>\n</code> 转义为换行符</li></ul><p><code>|</code> 将文本写到这个符号的下面, 会保留文本格式</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">myapp:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        aaa</span><br><span class="hljs-string">        bbb</span><br><span class="hljs-string">        ccc</span><br></code></pre></td></tr></table></figure><p><code>---</code> 这个符号下面的配置可以认为是一个独立的 yaml 文件, 便于大文件的阅读</p><h2 id="配置合并"><a href="#配置合并" class="headerlink" title="配置合并"></a>配置合并</h2><blockquote><p>properties 配置合并</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment"># 对于数组,使用逗号的方式来分隔</span><br><span class="hljs-attr">spring.config.import</span>=<span class="hljs-string">classpath:/application-mysql.properties,classpath:/application-redis.properties</span><br></code></pre></td></tr></table></figure><blockquote><p>yml 配置合并</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">config:</span><br>    <span class="hljs-attr">import:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">classpath:/config/application-mysql.yml</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">classpath:/config/application-redis.yml</span><br>  <span class="hljs-comment">#import: [classpath:/config/application-mysql.yml,classpath:/config/application-redis.yml]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>springboot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu卸载OpenJDK</title>
    <link href="/2025/08/04/ubuntu-remove-openjdk/"/>
    <url>/2025/08/04/ubuntu-remove-openjdk/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get purge openjdk-\*<br></code></pre></td></tr></table></figure><p>除了要卸载 openjdk, 还要卸载 openjdk-headless</p>]]></content>
    
    
    
    <tags>
      
      <tag>jdk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cursor注册新账号</title>
    <link href="/2025/08/03/cursor-new-account/"/>
    <url>/2025/08/03/cursor-new-account/</url>
    
    <content type="html"><![CDATA[<p>注册 Cursor 用的临时邮箱: <a href="https://blog.csdn.net/tian_20032242/article/details/147746770?ops_request_misc=%7B%22request_id%22:%2287ac7f5abf7406849c5f541a478227ce%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=87ac7f5abf7406849c5f541a478227ce&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-147746770-null-null.142%5Ev102%5Epc_search_result_base5&utm_term=cursor%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1&spm=1018.2226.3001.4187">我用cursor 搭建了临时邮箱服务-Temp Mail 365_cursor临时邮箱-CSDN博客</a></p><p>临时邮箱地址: <a href="https://temp-mail-365.com/en">Temp Mail 365 - Free Temporary Email Service | No Registration</a></p><p>0.45.15 版本还能激活: <a href="https://pan.quark.cn/s/856098bdf92b">https://pan.quark.cn/s/856098bdf92b</a></p><p>激活教程: <a href="https://blog.csdn.net/wuchaoyong0413/article/details/145891711">cursor设备ID修改器 支持0.45.x版本_cursor历史版本-CSDN博客</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">irm https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_win_id_modifier.ps1 | iex<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>cursor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Maven教程</title>
    <link href="/2025/08/02/maven-tutorial/"/>
    <url>/2025/08/02/maven-tutorial/</url>
    
    <content type="html"><![CDATA[<p>视频教程地址: <a href="https://www.bilibili.com/video/BV1uApMeWErY">https://www.bilibili.com/video/BV1uApMeWErY</a></p><h2 id="Maven-安装"><a href="#Maven-安装" class="headerlink" title="Maven 安装"></a>Maven 安装</h2><blockquote><p>前置环境</p></blockquote><p>安装 Maven 之前需要先安装 Java 开发工具, 而且对 JDK 的版本是有要求的, JDK 的版本必须 &gt;&#x3D; 1.7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看jdk的版本</span><br>java -version<br></code></pre></td></tr></table></figure><p>JDK 和 Maven 的版本映射关系: <a href="https://maven.apache.org/docs/history.html">Maven Releases History – Maven</a></p><blockquote><p>下载 Maven</p></blockquote><p>下载地址: <a href="https://maven.apache.org/download.cgi">Download Apache Maven – Maven</a></p><p><img src="/2025/08/02/maven-tutorial/image-20250802210959266.png" alt="image-20250802210959266"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 因为官网很慢,所以用阿里的镜像</span><br>wget https://mirrors.aliyun.com/apache/maven/maven-3/3.9.11/binaries/apache-maven-3.9.11-bin.tar.gz<br>tar xvzf apache-maven-3.9.11-bin.tar.gz<br></code></pre></td></tr></table></figure><blockquote><p>配置环境变量</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /home/liz/.bashrc<br><br><span class="hljs-built_in">export</span> MAVEN_HOME=/opt/apache-maven-3.9.11<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$MAVEN_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-comment"># 重新读取配置文件使环境生效,或重启一下终端</span><br><span class="hljs-built_in">source</span> /home/liz/.bashrc<br>mvn -v<br></code></pre></td></tr></table></figure><h2 id="Maven-仓库配置"><a href="#Maven-仓库配置" class="headerlink" title="Maven 仓库配置"></a>Maven 仓库配置</h2><blockquote><p>修改 Maven 仓库位置</p></blockquote><p><img src="/2025/08/02/maven-tutorial/image-20250802224550436.png" alt="image-20250802224550436"></p><blockquote><p>配置阿里镜像</p></blockquote><p>配置指南: <a href="https://maven.aliyun.com/mvn/guide?spm=a2c6h.13651104.d-5122.1.122d6e1aCdcDnf">仓库服务</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyunmaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>阿里云公共仓库<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2025/08/02/maven-tutorial/image-20250802231818552.png" alt="image-20250802231818552"></p><blockquote><p>配置 JDK 版本</p></blockquote><p>Maven 默认使用的 JDK 版本是 1.7, 如果想让 Maven 使用我们安装的 JDK 版本, 就需要在 profiles 里面配置一下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>jdk-21<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span> <span class="hljs-comment">&lt;!-- 默认激活 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">jdk</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">jdk</span>&gt;</span> <span class="hljs-comment">&lt;!-- 当系统JDK为21时自动激活 --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><img src="/2025/08/02/maven-tutorial/image-20250802232119074.png" alt="image-20250802232119074"></p><h2 id="创建-Maven-项目"><a href="#创建-Maven-项目" class="headerlink" title="创建 Maven 项目"></a>创建 Maven 项目</h2><blockquote><p>使用 Maven 的快速模版创建一个标准的 Maven 项目结构</p></blockquote><p>手册地址: <a href="https://maven.apache.org/guides/getting-started/index.html">Maven Getting Started Guide – Maven</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意:要在cmd中运行,在powershell中运行会报&quot;The goal you specified requires a project to execute but there is no POM in this directory&quot;的错,因为powershell会把.识别为属性访问,所以要么将含.的参数值用&quot;&quot;包起来,要么在cmd中运行</span><br>mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.5 -DinteractiveMode=<span class="hljs-literal">false</span><br><span class="hljs-comment">#打开项目</span><br><span class="hljs-built_in">cd</span> my-app<br>code . -r<br></code></pre></td></tr></table></figure><p><img src="/2025/08/02/maven-tutorial/image-20250802234457916.png" alt="image-20250802234457916"></p><blockquote><p>编译项目, 会在项目目录生成一个 target 文件, 放编译生成的 class 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mvn compile<br></code></pre></td></tr></table></figure><blockquote><p>打包项目, 会在项目目录的 target 文件看到生成的 jar 包, 也是这个项目最终的可执行文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mvn package<br></code></pre></td></tr></table></figure><blockquote><p>运行项目, 在 vscode里面配置 Java 环境参考: <a href="https://juejin.cn/post/7386916905008054287">vscode开发java环境配置，很细使用vscode开发java，Spring Boot框架项目，从0开始搭建开发环境 - 掘金</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -<span class="hljs-built_in">cp</span> .\target\my-app-1.0-SNAPSHOT.jar com.mycompany.app.App<br></code></pre></td></tr></table></figure><h2 id="IDEA-使用-Maven"><a href="#IDEA-使用-Maven" class="headerlink" title="IDEA 使用 Maven"></a>IDEA 使用 Maven</h2><blockquote><p>IDEA 创建 Maven 项目</p></blockquote><p><img src="/2025/08/02/maven-tutorial/image-20250803144322027.png" alt="image-20250803144322027"></p><blockquote><p>IDEA 配置 Maven 环境</p></blockquote><p><img src="/2025/08/02/maven-tutorial/image-20250803145729188.png" alt="image-20250803145729188"></p><h2 id="Maven-声明周期和插件"><a href="#Maven-声明周期和插件" class="headerlink" title="Maven 声明周期和插件"></a>Maven 声明周期和插件</h2><p>生命周期的概念是抽象的, 实际上是由不同的插件来实现的, 插件本质上是一下 Java 类, 它们实现了一些 Maven 的接口, 然后在不同的生命周期阶段被 Maven 调用</p><p>Maven 提供了三种主要的生命周期, 分别是 clean, default 和 site</p><p>clean 是用来清理项目的, 也就是把编译生成的 class 文件和打包生成的 jar 包都删除</p><p>default 包括了验证, 编译, 测试, 打包, 检查, 安装和部署等阶段</p><ul><li>validate 用来验证项目配置项是否正确, 并且所有必要的信息是可用的, 如果把 pom 文件的 groupId 的删掉, 再执行 validate 就会报错</li><li>compile 把 Java 的源码文件编译成字节码文件, 存到 target 目录</li><li>test 会把项目 test 目录中的单元测试用例都执行一遍</li><li>package 把编译生成的 class 文件和其他资源文件打包成一个 jar 包或者 war 包, 存到 target 目录. 执行 package 的时候, 会先把 compile 和 test 都执行一遍, 没有问题了才会打包, 这就是 Maven 声明周期的特点, 阶段都是有顺序的, 每个阶段都是依赖于上一个阶段, jar 包的命名规则: 项目的 artifactId-版本号</li><li>verify 用来验证打包的结果, 检查打包生成的 jar 包是否正确, 比如执行集成测试, 验证代码质量等等, 这个并不是很常用</li><li>install 把 jar 包或者 war 包安装到本地仓库</li><li>deploy 把 jar 包上传到远程仓库, 一般是发布到公司内部的私服仓库</li></ul><p>site 用来生成项目的站点文档, 把项目的一些信息和文档生成一个静态网站, 执行完成后可以看到 target 目录下面多了一个 site 目录. 在 IDEA 里面打开 site 里的 index.html, 点击右上角的浏览器图标</p><p>mvn 后面可以跟上不同的生命周期阶段, 在实际项目中比较常用的是 <code>mvn clean package</code> 和 <code>mvn clean deploy</code></p><h2 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h2><h3 id="依赖范围"><a href="#依赖范围" class="headerlink" title="依赖范围"></a>依赖范围</h3><p>scope 标签可以指定依赖的范围, 常见的有 compile, provided, runtime, test 等</p><ul><li><p>compile 指这个依赖是编译和运行时都需要的, 也是默认的范围, 可以省略不写, 大部分依赖都属于这个范围</p></li><li><p>provided 指这个依赖是编译是需要, 但是运行时不需要, 比如 lombok, 它的功能是简化 getter, setter 函数, 而这些功能在编译之前就已经完成了. 比如 servlet-api 在编译时会需要, 但是在运行时 Tomcat 或其他 Web 容器会提供</p></li><li><p>runtime 指这个依赖是运行时需要, 但是编译时不需要, 最典型的就是 JDBC 驱动的 jar 包</p></li><li><p>test 指这个依赖只是在测试的时候需要, 不会被打包到最终的 jar 包中, 且在正式的代码中无法使用, 比如 junit 框架</p></li><li><p>system 表示这个依赖是在本地的文件系统中提供的, 必须要同时提供一个 systemPath 标签, 用来指定这个依赖的具体位置, 这样 Maven 就不会去私服或者中央仓库下载, 但是不推荐使用, 会导致项目的可移植性变差</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"># $&#123;basedir&#125;表示当前项目的根目录<br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>system<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">systemPath</span>&gt;</span>$&#123;basedir&#125;/lib/junit-3.8.1.jar<span class="hljs-tag">&lt;/<span class="hljs-name">systemPath</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>import 在 dependencyManagement 中使用, 它的作用是导入其他 pom 文件中的依赖, 但不会实际引入依赖, 只是用来管理依赖的版本号, 主要用于父子工程</p></li></ul><h3 id="依赖传递"><a href="#依赖传递" class="headerlink" title="依赖传递"></a>依赖传递</h3><p>直接写在 pom.xml 文件中的依赖叫做直接依赖, 而当这个直接依赖又依赖了其他的 jar 包的时候, 这些被依赖的 jar 包叫做间接依赖, Maven 会自动解析这些依赖关系, 并下载这些依赖, 这就是依赖传递的概念, 只有依赖范围是 compile 的依赖才会被传递</p><h3 id="依赖冲突"><a href="#依赖冲突" class="headerlink" title="依赖冲突"></a>依赖冲突</h3><p>比如我们在项目里添加了两个不同的依赖, 它们又依赖了不同版本的同一个 jar 包, 那么就会出现依赖冲突的问题, 也就是我们到底应该使用哪一个版本的依赖的问题, 这个时候 Maven 会根据一定的规则来解决这个冲突</p><ul><li>最短路径优先: 路径最短的那个依赖会被使用</li><li>先声明优先: 当路径层次相同时, 在 pom.xml 里面配置顺序靠前的依赖, 就会被优先使用</li></ul><p>我们也可以手动控制来解决冲突, 主要是通过 exclusions 标签来排除掉不需要的依赖, 或者通过 optional 标签来标记一个依赖是可选的, 这样就不会被其他模块所继承</p><p><img src="/2025/08/02/maven-tutorial/image-20250803194140726.png" alt="image-20250803194140726"></p><p><img src="/2025/08/02/maven-tutorial/image-20250803194238941.png" alt="image-20250803194238941"></p><h2 id="父子工程"><a href="#父子工程" class="headerlink" title="父子工程"></a>父子工程</h2><blockquote><p>创建父工程</p></blockquote><p>IDEA 中, pom.xml 文件左边有一个 m 图标, 可以在父子模块中进行切换</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.example<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-parent-01<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 打包方式可以是jar,war或者pom等等,war包一般是打包web项目,pom表是这是一个父工程,pom不会生成任何的jar包或war包,而是用来管理其他子工程的 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>maven-parent-01<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.apache.org<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 列出了所有的子模块,通过聚合的方式来管理多个模块,比如可以通过一个命令一次性构建所有子模块,点击父工程的clean命令,会把所有子模块都清理一遍 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">modules</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">module</span>&gt;</span>child-a<span class="hljs-tag">&lt;/<span class="hljs-name">module</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">module</span>&gt;</span>child-b<span class="hljs-tag">&lt;/<span class="hljs-name">module</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">module</span>&gt;</span>child-c<span class="hljs-tag">&lt;/<span class="hljs-name">module</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">modules</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br><br></code></pre></td></tr></table></figure><blockquote><p>创建子工程</p></blockquote><p>在父工程上右键, 选择新建子模块</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 多了一个parent标签,指定了它的父工程的坐标,--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.example<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-parent-01<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- groupId被省略掉了,因为它会继承父工程的groupId --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>child-a<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>jar<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>child-a<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.apache.org<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="依赖继承"><a href="#依赖继承" class="headerlink" title="依赖继承"></a>依赖继承</h3><p>在父工程的 pom.xml 文件里添加一些公共的依赖, 这样子模块就可以继承这些依赖, 子模块的依赖列表就可以看到这些依赖, 即使依赖范围是 compile 以外的选项, 也会被继承</p><p>在实际的开发中, 会使用 dependencyManagement, 也就是依赖管理, 这样的话, 子模块就不会自动继承父模块的依赖了, 而是可以手动指定要继承的依赖, 这个时候在子模块里面可以不用写版本号了, 在 IDEA 左边可以看到一个小图标, 进行依赖的跳转</p><p>properties 标签可以用来定义一些公共的属性, 比如 Spring 的版本号, 然后在其他地方引用这个属性</p><p><img src="/2025/08/02/maven-tutorial/image-20250803200647772.png" alt="image-20250803200647772"></p><p><img src="/2025/08/02/maven-tutorial/image-20250803200406404.png" alt="image-20250803200406404"></p><h2 id="私服仓库"><a href="#私服仓库" class="headerlink" title="私服仓库"></a>私服仓库</h2><p>私服仓库主要有两个方面的作用: </p><ul><li>一个是可以用来作为中央仓库的代理, 本来需要到中央仓库下载的 jar 包, 现在只需要从局域网的私服仓库里下载就可以了</li><li>保存内部的非开源资源</li></ul><h3 id="安装-Nexus"><a href="#安装-Nexus" class="headerlink" title="安装 Nexus"></a>安装 Nexus</h3><p>官网下载 Nexus, 但是速度很慢: <a href="https://help.sonatype.com/en/download.html">Download</a></p><p>由于使用 Linux 安装 Nexus, 运行 <code>./nexus start</code> 一直失败, 所以使用 Docker 安装 Nexus:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 拉取镜像</span><br>docker pull sonatype/nexus3:latest  <span class="hljs-comment"># 拉取最新版</span><br><span class="hljs-comment"># 创建数据目录</span><br><span class="hljs-built_in">mkdir</span> -p /home/liz/nexus-data &amp;&amp; <span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> -R 200:200 /home/liz/nexus-data  <span class="hljs-comment"># 权限必须匹配容器内用户</span><br><span class="hljs-comment"># 运行容器</span><br>docker run -d --name nexus -p 8081:8081 -v /home/liz/soft/nexus-data:/nexus-data sonatype/nexus3<br><span class="hljs-comment"># 查看登录admin的密码</span><br><span class="hljs-built_in">cat</span> /home/liz/nexus/sonatype-work/nexus3/admin.password<br></code></pre></td></tr></table></figure><p>访问 localhost:8081, 登录用户是 admin, 密码是上面命令查看到的密码</p><blockquote><p>镜像加速器</p></blockquote><p>如果拉取镜像时报 <code>Error response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;</code> 的错, 说明镜像加速器没生效 (阿里的镜像加速器好像要在阿里的服务器上才生效)</p><p>到 <a href="https://github.com/docker-practice/docker-registry-cn-mirror-test/actions">Workflow runs · docker-practice&#x2F;docker-registry-cn-mirror-test</a> 看哪些加速器还可以用</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>  <span class="hljs-string">&quot;https://docker.m.daocloud.io&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">&quot;https://docker.fxxk.dedyn.io&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">&quot;https://dockerhub.timeweb.cloud&quot;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><h3 id="Nexus-使用"><a href="#Nexus-使用" class="headerlink" title="Nexus 使用"></a>Nexus 使用</h3><p>在 nexus 的 etc 目录里可以看到 <code>nexus.properties</code> 文件, 里面可以配置端口</p><p>在设置里可以看到 Nexus 提供的一些默认的仓库</p><ul><li>maven-central 的类型是 proxy, 它是中央仓库的代理</li><li>maven-snapshots 和 maven-releases 是 hosted 类型, 表示是一个本地的仓库, release 存放正式发布版的 jar 包, snapshot 存放快照版本的 jar 包</li><li>maven-public 的类型是 group, 表示是一个组合仓库, 它里面把 central, snapshots 和 releases 组合到了一起, 然后对外提供了一个统一的访问入口</li></ul><p><img src="/2025/08/02/maven-tutorial/image-20250804135356857.png" alt="image-20250804135356857"></p><blockquote><p>创建一个新的仓库, 类型选 maven2(hosted), 其他的保持默认就好</p></blockquote><p><img src="/2025/08/02/maven-tutorial/image-20250804140005497.png" alt="image-20250804140005497"></p><h3 id="配置私服仓库"><a href="#配置私服仓库" class="headerlink" title="配置私服仓库"></a>配置私服仓库</h3><p>mirror 里面的 id 虽然可以随便起, 但是要和后面配置的 server 里面的 id 以及项目工程中的 id 保持一致</p><p>点击复制仓库的地址, 粘贴到 mirror 的 url 里</p><p><img src="/2025/08/02/maven-tutorial/image-20250804140429981.png" alt="image-20250804140429981"></p><p><img src="/2025/08/02/maven-tutorial/image-20250804140724282.png" alt="image-20250804140724282"></p><p>在设置 Nexus 的时候, 有一个选项是是否允许匿名访问, 如果没有勾选这个选项, 就需要配置 server 的 用户名和密码</p><p><img src="/2025/08/02/maven-tutorial/image-20250804140612765.png" alt="image-20250804140612765"></p><p><img src="/2025/08/02/maven-tutorial/image-20250804140958740.png" alt="image-20250804140958740"></p><h3 id="上传到私服仓库"><a href="#上传到私服仓库" class="headerlink" title="上传到私服仓库"></a>上传到私服仓库</h3><p>distributionManagement 用来配置要把这个 jar 包发布到哪里, id 要 settings.xml 的 id 保持一致, 执行 <code>mvn clean deploy</code> 命令就可以把项目生成的 jar 包上传到私服仓库, url 是在 Nexus 的仓库界面复制的 <code>maven-snapshots</code> 的地址</p><p><img src="/2025/08/02/maven-tutorial/image-20250804141801689.png" alt="image-20250804141801689"></p><p>如果要上传正式版本, 需要把项目版本号的 <code>-SNAPSHOT</code> 去掉, Maven 是用版本号来区分到底是快照版本还是正式版本, 如果包含 <code>-SNAPSHOT</code>, 在执行 deploy 命令的时候, 默认会上传到快照仓库里</p><p><img src="/2025/08/02/maven-tutorial/image-20250804142516688.png" alt="image-20250804142516688"></p><p><img src="/2025/08/02/maven-tutorial/image-20250804142502169.png" alt="image-20250804142502169"></p><p>正式版本的 jar 包在发布之后, 默认是不能被覆盖的, 如果发布了一个 1.0.0 版本的 jar 包, 再次发布的时候, 如果版本号还是 1.0.0, 就会报错, 而快照版本的 jar 包是没有这个限制的</p><p>如果就是想要覆盖正式版本的 jar 包, 可以设置</p><p><img src="/2025/08/02/maven-tutorial/image-20250804142427664.png" alt="image-20250804142427664"></p>]]></content>
    
    
    
    <tags>
      
      <tag>maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA设置推荐配置</title>
    <link href="/2025/07/31/idea-settings/"/>
    <url>/2025/07/31/idea-settings/</url>
    
    <content type="html"><![CDATA[<p>参考教程: [工具软件&#x2F;IntelliJ IDEA 高效使用教程.md · 猎隼丶止戈&#x2F;Answer-Me-Run - Gitee.com](<a href="https://gitee.com/nn200433/run/blob/master/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6/IntelliJ">https://gitee.com/nn200433/run/blob/master/工具软件/IntelliJ</a> IDEA 高效使用教程.md#idea-的一些优化)</p>]]></content>
    
    
    
    <tags>
      
      <tag>idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/07/29/hello-world/"/>
    <url>/2025/07/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
